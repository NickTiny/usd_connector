#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.5.3 LTS"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Cube_A"
    {
        custom string userProperties:blender:object_name = "Cube_A"
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-1.9587876796722412, -3.687094211578369, 0.6065749526023865)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Mesh "Cube_A" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/Material_002>
            normal3f[] normals = [(-0.9705006, 0, 0.24109866), (-0.9705006, 0, 0.24109866), (-0.9705006, 0, 0.24109866), (-0.9705006, 0, 0.24109866), (0, 0.97050047, 0.241099), (0, 0.97050047, 0.241099), (0, 0.97050047, 0.241099), (0, 0.97050047, 0.241099), (0.9705006, 0, 0.24109842), (0.9705006, 0, 0.24109842), (0.9705006, 0, 0.24109842), (0.9705006, 0, 0.24109842), (0, -0.97050077, 0.24109814), (0, -0.97050077, 0.24109814), (0, -0.97050077, 0.24109814), (0, -0.97050077, 0.24109814), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1, -1, -1), (-0.50314575, -0.50314695, 1), (-1, 1, -1), (-0.50314575, 0.50314504, 1), (1, -1, -1), (0.50314623, -0.50314695, 1), (1, 1, -1), (0.50314623, 0.50314504, 1)]
            texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.125, 0.5), (0.375, 0.5), (0.375, 0.75), (0.125, 0.75), (0.625, 0.5), (0.875, 0.5), (0.875, 0.75), (0.625, 0.75)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            custom string userProperties:blender:data_name = "Cube_A"
        }
    }

    def Scope "_materials"
    {
        def Material "Material_002"
        {
            token outputs:surface.connect = </root/_materials/Material_002/Principled_BSDF.outputs:surface>
            custom string userProperties:blender:data_name = "Material.002"

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.80020416, 0.0043296027, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "Material_001"
        {
            token outputs:surface.connect = </root/_materials/Material_001/Principled_BSDF.outputs:surface>
            custom string userProperties:blender:data_name = "Material.001"

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0.06875617, 0.80071884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }
    }

    def Xform "Cube_B"
    {
        custom string userProperties:blender:object_name = "Cube_B"
        float3 xformOp:rotateXYZ = (0, -0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6093270778656006, 1.667818546295166, 0.23389765620231628)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Mesh "Cube_B" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/Material_001>
            normal3f[] normals = [(-0.98895276, 0, 0.14823145), (-0.98895276, 0, 0.14823145), (-0.98895276, 0, 0.14823145), (-0.98895276, 0, 0.14823145), (0, 0.98895276, 0.14823148), (0, 0.98895276, 0.14823148), (0, 0.98895276, 0.14823148), (0, 0.98895276, 0.14823148), (0.98895276, 0, 0.14823145), (0.98895276, 0, 0.14823145), (0.98895276, 0, 0.14823145), (0.98895276, 0, 0.14823145), (0, -0.98895276, 0.14823148), (0, -0.98895276, 0.14823148), (0, -0.98895276, 0.14823148), (0, -0.98895276, 0.14823148), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1, -1, -1), (-0.7002254, -0.7002254, 1), (-1, 1, -1), (-0.7002254, 0.7002254, 1), (1, -1, -1), (0.7002254, -0.7002254, 1), (1, 1, -1), (0.7002254, 0.7002254, 1)]
            texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.125, 0.5), (0.375, 0.5), (0.375, 0.75), (0.125, 0.75), (0.625, 0.5), (0.875, 0.5), (0.875, 0.75), (0.625, 0.75)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            custom string userProperties:blender:data_name = "Cube_B"
        }
    }

    def DomeLight "env_light"
    {
        float inputs:intensity = 1
        asset inputs:texture:file = @./textures/color_121212.hdr@
        float3 xformOp:rotateXYZ = (90, -0, 90)
        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
    }
}

