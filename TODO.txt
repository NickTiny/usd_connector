TODOs
 - [x] Setup addon
 - [x] Register USD Hook
 - [x] Create proeprty group on objects
 - [x] Create collection group for libraries on window manager
 - [x] Add existing Blender to USD override code
    - [x] Does on export hook work post file save, or do  
- [x] Make override generation more generic
   - [x] Document/plan what objects are easiest to support, find workaround for rest (make a list of to implement stuff in README)
- [x] Make TODO list for accomodating import settings at least scaling settings, can I even get the import settings or do i need to make my own import wrapper?
- [x] Handle materials
- [x] Create Custom Importer/Exporter so we can control settings 
- [x] Handle scaling difference importer/exporter
- [x] Add Logic to "reload" usd Scene 
     - [x] Re-Open layer file 

- [x] Accomodate New Blender Data during Refresh (remap data maybe?) 
- [ ] Clean Up Test Files
- [ ] Use Temp Directory on Refresh and Delete Data
- [ ] Resync using temp directory and clean up after the fact
- [ ] Diff logic V2 
   - Make snapshots an export from Blender USD
   - Compare current export to snapshot export to get difference
   - Apply Overrides to new stage against source file (this allows for material stuff)
   - Use PrimTransfer class to gather up all prim data and do compariso on per prim basis
   - Could Potentially support Mesh>Cube mapping for prim differences created by Exporter



Things to consider
 - [ ] Is there a good way of getting all IDs that are registered to a given library, maybe a collection property of pointers to objects? TBD if needed
 - [ ] Should I register USDConnect props on all ID types or on each supported ID explictly, Object, Material, Mesh, Curve, Light etc
 - [ ] Add attribute to library for ignore properties (such as blender name) make optional



Supporting Othr Datablock types
- [x] Review how materials to support
- [ ] Need to test other datablock types TODO

Things to do later
- [ ] Handle axis differences importer/exporter